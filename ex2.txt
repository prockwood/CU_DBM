-- ############ PRACTICE PROBLEMS ##############

-- 1) List the customer number, the name, the phone number, and the city of customers.

SELECT custno, custname, phone, city
FROM customer


-- 2) List the customer number, the name, the phone number, and the city of customers who reside in Colorado (State is CO).

SELECT custno, custname, phone, city
FROM customer
WHERE state = 'CO'


-- 3) List all columns of the EventRequest table for events costing more than $4000.  Order the result by the event date (DateHeld).

SELECT *
FROM eventrequest
WHERE estcost > 4000
ORDER BY dateheld


-- 4) List the event number, the event date (DateHeld), and the estimated audience number with approved status and audience greater than 9000 or with pending status and audience greater than 7000.

SELECT eventno, dateheld, estaudience
FROM eventrequest
WHERE (status = 'Approved' and estaudience > 9000) or (status = 'Pending' and estaudience > 7000)


-- 5) List the event number, event date (DateHeld), customer number and customer name of events placed in January 2018 by customers from Boulder.

SELECT eventno, dateheld, eventrequest.custno, custname
FROM eventrequest
JOIN customer ON eventrequest.custno = customer.custno
WHERE EXTRACT(MONTH FROM dateheld) = 12


SELECT eventno, dateheld, eventrequest.custno, custname
FROM eventrequest
JOIN customer ON eventrequest.custno = customer.custno
WHERE EXTRACT(MONTH FROM dateheld) = 12




--    1) List the average number of resources used (NumberFld) by plan number. Include only location number L100.

SELECT planno, AVG(numberfld) AS avg_field_use_for_L100
FROM eventplanline
WHERE locno = 'L100'
GROUP BY planno


--    2) List the average number of resources used (NumberFld) by plan number. Only include location number L100. Eliminate plans with less than two event lines containing location number L100.

SELECT planno, AVG(numberfld) AS avg_field_use_for_L100
FROM eventplanline
WHERE (locno = 'L100')
GROUP BY planno
HAVING COUNT(*) > 1


-- ############ GRADED ASSIGNMENT ##############

-- 1.	List the city, state, and zip codes in the customer table.  Your result should not have duplicates. (Hint: The DISTINCT keyword eliminates duplicates.)

SELECT DISTINCT city, state, zip
FROM customer


-- 2.	List the name, department, phone number, and email address of employees with a phone number beginning with “3-”.

SELECT empname, department, phone, email 
FROM employee
WHERE phone LIKE('3%')


-- 3.	List all columns of the resource table with a rate between $10 and $20. Sort the result by rate.

SELECT *
FROM resourcetbl
WHERE rate BETWEEN 10 and 20


-- 4.	List the event requests with a status of “Approved” or “Denied” and an authorized date in July 2018. Include the event number, authorization date, and status in the output. (Hint: see the examples in Module 4 for date constants in Oracle and MySQL.)

SELECT eventno, dateauth, status
FROM eventrequest
WHERE (status IN ('Approved', 'Denied')) 
	AND EXTRACT(MONTH from dateauth) = 7
	AND EXTRACT(YEAR from dateauth) = 2018


-- 5.	List the location number and name of locations that are part of the “Basketball arena”.  Your WHERE clause should not have a condition involving the facility number compared to a constant (“F101”). Instead, you should use a condition on the FacName column for the value of “Basketball arena”.

SELECT locno, locname
FROM facility
JOIN location on facility.facno = location.facno
WHERE facility.facname = 'Basketball arena'



-- 6.	For each event plan, list the plan number, count of the event plan lines, and sum of the number of resources assigned.  For example, plan number “P100” has 4 lines and 7 resources assigned.  You only need to consider event plans that have at least one line.

SELECT planno, COUNT(*) as numLines, SUM(numberfld) as fields
FROM EventPlanLine
GROUP BY planno

